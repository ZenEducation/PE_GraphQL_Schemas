type Lead
  @model
  @auth(rules: [
    { allow: owner, ownerField: "userId", operations: [create, update, delete] }
    { allow: groups, groups: ["Admins"], operations: [create, update, delete] }
    { allow: public, operations: [read] }
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  status: LeadStatus
  source: String
  campaign: Campaign @belongsTo(fields: ["campaignId"])
  customer: Customer @belongsTo(fields: ["customerId"])
  contacts: [Contact] @hasMany(indexName: "byLead", fields: ["id"])
  userId: String!
  doNotCall: Boolean
  industry: String
  owner: String
  jobTitle: String
  history: String


}

enum LeadStatus {
  NEW
  FOLLOW_UP
  CONTACTED
  CLOSED
}

type Campaign
  @model
  @auth(rules: [
    { allow: owner, ownerField: "userId", operations: [create, update, delete] }
    { allow: groups, groups: ["Admins"], operations: [create, update, delete] }
    { allow: public, operations: [read] }
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  name: String!
  startDate: AWSDate!
  endDate: AWSDate!
  active: Boolean
  ActualCost: String
  description: String
  leads: [Lead] @hasMany(name: "LeadCampaign")
  campaigns: [Campaign] @hasMany(name: "CustomerCampaigns")
  contacts: [Contact] @hasMany(indexName: "byCustomer", fields: ["id"])
  userId: String!
}

type Customer
  @model
  @auth(rules: [
    { allow: owner, ownerField: "userId", operations: [create, read, update, delete] }
    { allow: groups, groups: ["Admins"], operations: [create, read, update, delete] }
    { allow: public, operations: [read] }
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  name: String!
  email: String!
  phone: String
  leads: [Lead] @hasMany(name: "CustomerLeads")
  campaigns: [Campaign] @hasMany(name: "CustomerCampaigns")
  contacts: [Contact] @hasMany(indexName: "byCampaign", fields: ["id"])
  userId: String!
}

type Contact
  @model
  @auth(rules: [
    { allow: owner, ownerField: "userId", operations: [create, read, update, delete] }
    { allow: groups, groups: ["Admins"], operations: [create, read, update, delete] }
  ]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  lead: Lead @belongsTo(fields: ["leadId"])
  leadId: ID
  customer: Customer @belongsTo(fields: ["customerId"])
  customerId: ID
  campaign: Campaign @belongsTo(fields: ["campaignId"])
  campaignId: ID
  userId: String!
}